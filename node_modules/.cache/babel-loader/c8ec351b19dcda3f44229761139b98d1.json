{"ast":null,"code":"var _jsxFileName = \"/Users/Ossian/reachseose/tests/src/UseRefTest.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback, useMemo, useContext, createContext, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UseRefTest() {\n  _s();\n\n  const [inputValue, setInputValue] = useState(\"\");\n  const refNumber = useRef(0);\n  const inputElement = useRef(inputElement);\n\n  const putFocus = () => {\n    inputElement.current.focus();\n  };\n\n  useEffect(() => {\n    refNumber.current = refNumber.current + 1;\n  }, [inputValue]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Put focus on me...\",\n        ref: inputElement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: putFocus,\n        children: \"Use me to put focus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: inputValue,\n      onChange: f => setInputValue(f.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), \"Render count: \", refNumber.current]\n  }, void 0, true);\n}\n\n_s(UseRefTest, \"2ydOF8GIL4gVEsj3JOVW7GGNtPw=\");\n\n_c = UseRefTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseRefTest\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","useMemo","useContext","createContext","useRef","UseRefTest","inputValue","setInputValue","refNumber","inputElement","putFocus","current","focus","f","target","value"],"sources":["/Users/Ossian/reachseose/tests/src/UseRefTest.js"],"sourcesContent":["import React, {\n  useEffect,\n  useState,\n  useCallback,\n  useMemo,\n  useContext,\n  createContext,\n  useRef,\n} from \"react\";\n\nexport default function UseRefTest() {\n  const [inputValue, setInputValue] = useState(\"\");\n  const refNumber = useRef(0);\n  const inputElement = useRef(inputElement);\n\n  const putFocus = () => {\n    inputElement.current.focus();\n  };\n\n  useEffect(() => {\n    refNumber.current = refNumber.current + 1;\n  }, [inputValue]);\n\n  return (\n    <>\n      <p>\n        <input\n          type=\"text\"\n          placeholder=\"Put focus on me...\"\n          ref={inputElement}\n        />\n        <button onClick={putFocus}>Use me to put focus</button>\n      </p>\n      <input\n        type=\"number\"\n        value={inputValue}\n        onChange={(f) => setInputValue(f.target.value)}\n      />\n      Render count: {refNumber.current}\n    </>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IACEC,SADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,OAJF,EAKEC,UALF,EAMEC,aANF,EAOEC,MAPF,QAQO,OARP;;;AAUA,eAAe,SAASC,UAAT,GAAsB;EAAA;;EACnC,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAMS,SAAS,GAAGJ,MAAM,CAAC,CAAD,CAAxB;EACA,MAAMK,YAAY,GAAGL,MAAM,CAACK,YAAD,CAA3B;;EAEA,MAAMC,QAAQ,GAAG,MAAM;IACrBD,YAAY,CAACE,OAAb,CAAqBC,KAArB;EACD,CAFD;;EAIAd,SAAS,CAAC,MAAM;IACdU,SAAS,CAACG,OAAV,GAAoBH,SAAS,CAACG,OAAV,GAAoB,CAAxC;EACD,CAFQ,EAEN,CAACL,UAAD,CAFM,CAAT;EAIA,oBACE;IAAA,wBACE;MAAA,wBACE;QACE,IAAI,EAAC,MADP;QAEE,WAAW,EAAC,oBAFd;QAGE,GAAG,EAAEG;MAHP;QAAA;QAAA;QAAA;MAAA,QADF,eAME;QAAQ,OAAO,EAAEC,QAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eASE;MACE,IAAI,EAAC,QADP;MAEE,KAAK,EAAEJ,UAFT;MAGE,QAAQ,EAAGO,CAAD,IAAON,aAAa,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV;IAHhC;MAAA;MAAA;MAAA;IAAA,QATF,oBAciBP,SAAS,CAACG,OAd3B;EAAA,gBADF;AAkBD;;GA/BuBN,U;;KAAAA,U"},"metadata":{},"sourceType":"module"}